// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameData/Networking/Messages/Spawning/Spawn.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NetMessage.Spawning {

  /// <summary>Holder for reflection information generated from GameData/Networking/Messages/Spawning/Spawn.proto</summary>
  public static partial class SpawnReflection {

    #region Descriptor
    /// <summary>File descriptor for GameData/Networking/Messages/Spawning/Spawn.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpawnReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFHYW1lRGF0YS9OZXR3b3JraW5nL01lc3NhZ2VzL1NwYXduaW5nL1NwYXdu",
            "LnByb3RvEhNOZXRNZXNzYWdlLlNwYXduaW5nGjVHYW1lRGF0YS9OZXR3b3Jr",
            "aW5nL01lc3NhZ2VzL1RyYW5zZm9ybS9Qb3NpdGlvbi5wcm90bxo1R2FtZURh",
            "dGEvTmV0d29ya2luZy9NZXNzYWdlcy9UcmFuc2Zvcm0vUm90YXRpb24ucHJv",
            "dG8iggEKDFNwYXduUmVxdWVzdBIOCgZ1bml0SWQYASABKAUSMAoIcG9zaXRp",
            "b24YAiABKAsyHi5OZXRNZXNzYWdlLlRyYW5zZm9ybS5Qb3NpdGlvbhIwCghy",
            "b3RhdGlvbhgDIAEoCzIeLk5ldE1lc3NhZ2UuVHJhbnNmb3JtLlJvdGF0aW9u",
            "IjIKDVNwYXduUmVzcG9uc2UiIQoGU3RhdHVzEgsKB0FMTE9XRUQQABIKCgZE",
            "RU5JRUQQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NetMessage.Transform.PositionReflection.Descriptor, global::NetMessage.Transform.RotationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NetMessage.Spawning.SpawnRequest), global::NetMessage.Spawning.SpawnRequest.Parser, new[]{ "UnitId", "Position", "Rotation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetMessage.Spawning.SpawnResponse), global::NetMessage.Spawning.SpawnResponse.Parser, null, null, new[]{ typeof(global::NetMessage.Spawning.SpawnResponse.Types.Status) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SpawnRequest : pb::IMessage<SpawnRequest> {
    private static readonly pb::MessageParser<SpawnRequest> _parser = new pb::MessageParser<SpawnRequest>(() => new SpawnRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpawnRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetMessage.Spawning.SpawnReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpawnRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpawnRequest(SpawnRequest other) : this() {
      unitId_ = other.unitId_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpawnRequest Clone() {
      return new SpawnRequest(this);
    }

    /// <summary>Field number for the "unitId" field.</summary>
    public const int UnitIdFieldNumber = 1;
    private int unitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnitId {
      get { return unitId_; }
      set {
        unitId_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::NetMessage.Transform.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetMessage.Transform.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 3;
    private global::NetMessage.Transform.Rotation rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetMessage.Transform.Rotation Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpawnRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpawnRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnitId != other.UnitId) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnitId != 0) hash ^= UnitId.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnitId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnitId);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnitId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnitId);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpawnRequest other) {
      if (other == null) {
        return;
      }
      if (other.UnitId != 0) {
        UnitId = other.UnitId;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::NetMessage.Transform.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::NetMessage.Transform.Rotation();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnitId = input.ReadInt32();
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::NetMessage.Transform.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 26: {
            if (rotation_ == null) {
              Rotation = new global::NetMessage.Transform.Rotation();
            }
            input.ReadMessage(Rotation);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpawnResponse : pb::IMessage<SpawnResponse> {
    private static readonly pb::MessageParser<SpawnResponse> _parser = new pb::MessageParser<SpawnResponse>(() => new SpawnResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpawnResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetMessage.Spawning.SpawnReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpawnResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpawnResponse(SpawnResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpawnResponse Clone() {
      return new SpawnResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpawnResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpawnResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpawnResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SpawnResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("ALLOWED")] Allowed = 0,
        [pbr::OriginalName("DENIED")] Denied = 1,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
